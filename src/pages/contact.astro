---
import BaseLayout from '../layouts/BaseLayout.astro';
import site from '../config/site';
---
<BaseLayout title={`Contact â€” ${site.name}`} description={`Get in touch with ${site.name}.`}>
  <header class="mt-2">
    <h1 class="text-responsive-lg font-semibold tracking-tight text-theme-primary">Contact</h1>
    <p class="text-theme-tertiary mt-1 text-responsive-base">Send a message and I'll get back to you soon.</p>
  </header>

  <section class="mt-4 sm:mt-6">
    <form id="contactForm" class="space-y-4 sm:space-y-5 card-responsive shadow-sm" method="POST">
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <div>
          <label for="name" class="block text-responsive-sm font-medium text-theme-secondary">Name</label>
          <input id="name" name="name" required class="mt-1 block w-full rounded-md border border-theme-primary bg-theme-primary px-3 py-2 text-responsive-sm shadow-sm transition focus:border-theme-accent focus:ring-2 focus:ring-theme-accent/20 focus:outline-none text-theme-primary" />
        </div>
        <div>
          <label for="email" class="block text-responsive-sm font-medium text-theme-secondary">Email</label>
          <input id="email" type="email" name="email" required class="mt-1 block w-full rounded-md border border-theme-primary bg-theme-primary px-3 py-2 text-responsive-sm shadow-sm transition focus:border-theme-accent focus:ring-2 focus:ring-theme-accent/20 focus:outline-none text-theme-primary" />
        </div>
      </div>
      <div>
        <label for="message" class="block text-responsive-sm font-medium text-theme-secondary">Message</label>
        <textarea id="message" name="message" rows="6" required class="mt-1 block w-full rounded-md border border-theme-primary bg-theme-primary px-3 py-2 text-responsive-sm shadow-sm transition focus:border-theme-accent focus:ring-2 focus:ring-theme-accent/20 focus:outline-none text-theme-primary resize-y"></textarea>
      </div>
      
      <!-- Status message area -->
      <div id="statusMessage" class="hidden"></div>
      
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3 sm:gap-4">
        <p class="text-xs text-theme-muted order-2 sm:order-1">Powered by Cloudflare Workers and Resend. Your message will be sent securely.</p>
        <button type="submit" id="submitButton" class="btn-responsive btn-theme-accent inline-flex items-center justify-center rounded-md font-medium shadow-sm order-1 sm:order-2">
          <span class="submit-text">Send Message</span>
          <span class="submit-loading hidden">
            <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Sending...
          </span>
        </button>
      </div>
    </form>
  </section>

  <script>
    // Contact form submission handler
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('contactForm') as HTMLFormElement;
      const statusMessage = document.getElementById('statusMessage') as HTMLElement;
      const submitButton = document.getElementById('submitButton') as HTMLButtonElement;
      const submitText = submitButton.querySelector('.submit-text') as HTMLElement;
      const submitLoading = submitButton.querySelector('.submit-loading') as HTMLElement;

      function showStatus(message: string, isError: boolean = false) {
        statusMessage.className = `p-3 rounded-md text-sm ${
          isError 
            ? 'bg-red-50 text-red-800 border border-red-200' 
            : 'bg-green-50 text-green-800 border border-green-200'
        }`;
        statusMessage.textContent = message;
        statusMessage.classList.remove('hidden');
        
        // Auto-hide success messages after 5 seconds
        if (!isError) {
          setTimeout(() => {
            statusMessage.classList.add('hidden');
          }, 5000);
        }
      }

      function setLoading(loading: boolean) {
        submitButton.disabled = loading;
        if (loading) {
          submitText.classList.add('hidden');
          submitLoading.classList.remove('hidden');
        } else {
          submitText.classList.remove('hidden');
          submitLoading.classList.add('hidden');
        }
      }

      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Hide any previous status messages
        statusMessage.classList.add('hidden');
        setLoading(true);

        try {
          const formData = new FormData(form);
          
          const response = await fetch('/api/contact', {
            method: 'POST',
            body: formData,
          });

          const result = await response.json();

          if (response.ok && result.success) {
            showStatus('Thank you! Your message has been sent successfully. I\'ll get back to you soon.');
            form.reset();
          } else {
            showStatus(result.error || 'Something went wrong. Please try again.', true);
          }
        } catch (error) {
          showStatus('Network error. Please check your connection and try again.', true);
        } finally {
          setLoading(false);
        }
      });
    });
  </script>
</BaseLayout>
